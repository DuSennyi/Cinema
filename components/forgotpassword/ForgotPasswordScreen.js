import React from 'react';
import { Alert, Image, KeyboardAvoidingView, Platform, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';

const ForgotPasswordScreen = ({ navigation }) => {
    const defaultOTP = '4970'; // M√£ OTP m·∫∑c ƒë·ªãnh cho qu√™n m·∫≠t kh·∫©u

    const handleForgotPassword = () => {
        Alert.alert(
            'üîê X√°c minh OTP',
            `M√£ OTP c·ªßa b·∫°n l√†:\n\nüéâ ${defaultOTP} üéâ\n\nH√£y nh·∫≠p m√£ n√†y ƒë·ªÉ ti·∫øp t·ª•c.`,
            [
                {
                    text: 'Th·ª≠ l·∫°i',
                    onPress: () => console.log('Ng∆∞·ªùi d√πng ch·ªçn th·ª≠ l·∫°i'),
                    style: 'cancel',
                },
                {
                    text: 'X√°c nh·∫≠n',
                    onPress: () =>
                        navigation.navigate('VerificationCodeRepairScreen', {
                            otp: defaultOTP,
                        }),
                },
            ],
            { cancelable: false }
        );
    };

    return (
        <KeyboardAvoidingView 
            style={styles.container} 
            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
        >
            <ScrollView contentContainerStyle={styles.scrollContainer}>
                <View style={styles.header}>
                    <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
                        <Image 
                            source={require('../../assets/back.png')} 
                            style={styles.backButtonImage} 
                        />
                    </TouchableOpacity>
                    <Text style={[styles.title]}>Qu√™n m·∫≠t kh·∫©u</Text>
                </View>
                
                <View style={styles.iconContainer}>
                    <Image 
                        source={require('../../assets/forgotpass.png')} 
                        style={styles.lockIcon}
                    />
                </View>
                <Text style={[styles.instructionText, { fontWeight: 'bold' }]}>
                    Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n ƒë·ªÉ nh·∫≠n m√£ x√°c minh
                </Text>
                <TextInput
                    style={styles.input}
                    keyboardType="phone-pad"
                    placeholderTextColor="#A8A8A8" 
                />
                <View style={styles.buttonContainer}>
                    <TouchableOpacity 
                        style={styles.submitButton} 
                        onPress={handleForgotPassword}
                    >
                        <Text style={styles.buttonText}>Ti·∫øp t·ª•c</Text>
                    </TouchableOpacity>
                </View>
            </ScrollView>
        </KeyboardAvoidingView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1, // Chi·∫øm to√†n b·ªô kh√¥ng gian
        backgroundColor: 'white', // M√†u n·ªÅn tr·∫Øng
    },
    scrollContainer: {
        flexGrow: 1, // Cho ph√©p ScrollView chi·∫øm to√†n b·ªô kh√¥ng gian
        padding: 50, // Kho·∫£ng c√°ch b√™n trong
        justifyContent: 'center', // CƒÉn gi·ªØa theo chi·ªÅu d·ªçc
    },
    // Header ch·ª©a n√∫t quay l·∫°i v√† ti√™u ƒë·ªÅ
    header: {
        width: '100%', // Chi·∫øm to√†n b·ªô chi·ªÅu ngang
        flexDirection: 'row', // S·∫Øp x·∫øp theo h√†ng ngang
        alignItems: 'center', // CƒÉn gi·ªØa theo chi·ªÅu d·ªçc
        justifyContent: 'center', // CƒÉn gi·ªØa ti√™u ƒë·ªÅ
        paddingVertical: 10, // Kho·∫£ng c√°ch d·ªçc h·ª£p l√Ω cho header
        marginBottom: 20, // Kho·∫£ng c√°ch d∆∞·ªõi header
        position: 'relative', // ƒê·ªÉ s·ª≠ d·ª•ng absolute cho n√∫t quay l·∫°i
    },
    backButton: {
        position: 'absolute', // ƒê·∫∑t v·ªã tr√≠ tuy·ªát ƒë·ªëi
        left: -25, // ƒê·∫©y n√∫t quay l·∫°i s√°t l·ªÅ tr√°i
    },
    backButtonImage: {
        width: 23, // K√≠ch th∆∞·ªõc h√¨nh ·∫£nh n√∫t quay l·∫°i
        height: 23,
    },
    title: {
        fontSize: 30, // K√≠ch th∆∞·ªõc font cho ti√™u ƒë·ªÅ
        textAlign: 'center', // CƒÉn gi·ªØa ti√™u ƒë·ªÅ
    },
    iconContainer: {
        borderRadius: 100, // T·∫°o h√¨nh tr√≤n cho container
        padding: 10, // Kho·∫£ng c√°ch b√™n trong cho h√¨nh tr√≤n
        marginBottom: 30, // Kho·∫£ng c√°ch d∆∞·ªõi h√¨nh tr√≤n
        alignItems: 'center', // CƒÉn gi·ªØa n·ªôi dung b√™n trong
    },
    lockIcon: {
        width: 250, // ƒê·∫∑t chi·ªÅu r·ªông cho h√¨nh kh√≥a
        height: 250, // ƒê·∫∑t chi·ªÅu cao cho h√¨nh kh√≥a
    },
    instructionText: {
        textAlign: 'center', // CƒÉn gi·ªØa vƒÉn b·∫£n
        marginBottom: 20, // Kho·∫£ng c√°ch d∆∞·ªõi vƒÉn b·∫£n
        color: 'black', // M√†u ch·ªØ ƒëen
        fontSize: 17, // K√≠ch th∆∞·ªõc font cho vƒÉn b·∫£n h∆∞·ªõng d·∫´n
    },
    input: {
        height: 100, // Gi·ªØ nguy√™n chi·ªÅu cao c·ªßa input
        borderBottomColor: '#9C9999', // M√†u cho ƒë∆∞·ªùng k·∫ª d∆∞·ªõi input
        borderBottomWidth: 1, // ƒê·ªô d√†y cho ƒë∆∞·ªùng k·∫ª d∆∞·ªõi
        paddingVertical: 9, // ƒê·∫∑t padding d·ªçc v·ªÅ 0 ƒë·ªÉ s√°t m√©p
        paddingHorizontal: 5, // Kho·∫£ng c√°ch ngang
        marginVertical: 10, // Kho·∫£ng c√°ch d·ªçc gi·ªØa c√°c input
        width: '100%', // Chi·ªÅu r·ªông 100% c·ªßa container
        maxWidth: 300, // Chi·ªÅu r·ªông t·ªëi ƒëa l√† 300px
        backgroundColor: 'transparent', // ƒê·∫£m b·∫£o n·ªÅn input trong su·ªët
        fontSize: 16, // K√≠ch th∆∞·ªõc ch·ªØ ƒë·ªÉ ph√π h·ª£p v·ªõi chi·ªÅu cao
        textAlignVertical: 'bottom', // ƒê∆∞a vƒÉn b·∫£n v·ªÅ ph√≠a d∆∞·ªõi c·ªßa tr∆∞·ªùng nh·∫≠p
    },
    
    buttonContainer: {
        flex: 1, // Chi·∫øm to√†n b·ªô kh√¥ng gian
        justifyContent: 'flex-end', // ƒê·∫©y n√∫t xu·ªëng ph√≠a d∆∞·ªõi
        alignItems: 'center', // CƒÉn gi·ªØa n√∫t
        marginBottom: 15, // Kho·∫£ng c√°ch d∆∞·ªõi cho n√∫t
    },
    submitButton: {
        height: 32, // Chi·ªÅu cao c·ªßa n√∫t g·ª≠i
        width: 100, // Chi·ªÅu r·ªông
        backgroundColor: 'black', // M√†u n·ªÅn cho n√∫t g·ª≠i
        borderRadius: 16, // L√†m tr√≤n c√°c g√≥c c·ªßa n√∫t, gi·∫£m b√°n k√≠nh ƒë·ªÉ t∆∞∆°ng ·ª©ng v·ªõi k√≠ch th∆∞·ªõc
        alignItems: 'center', // CƒÉn gi·ªØa c√°c n·ªôi dung b√™n trong n√∫t
        justifyContent: 'center', // CƒÉn gi·ªØa theo chi·ªÅu d·ªçc b√™n trong n√∫t
        marginVertical: 50, // Kho·∫£ng c√°ch d·ªçc gi·ªØa c√°c n√∫t
    },
    buttonText: {
        color: 'white', // M√†u ch·ªØ cho vƒÉn b·∫£n n√∫t
        fontSize: 14, // K√≠ch th∆∞·ªõc font cho vƒÉn b·∫£n n√∫t
    },
});

export default ForgotPasswordScreen;
